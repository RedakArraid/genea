version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: geneaia-db-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-genea}
      POSTGRES_USER: ${POSTGRES_USER:-kader}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kader}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kader} -d ${POSTGRES_DB:-genea}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geneaia-network
    restart: unless-stopped

  # Backend Python FastAPI
  backend:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    container_name: geneaia-backend-prod
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://kader:kader@postgres:5432/genea}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-production-secret-change-me}
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=3001
    volumes:
      - backend_uploads_prod:/app/uploads
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - geneaia-network
    restart: unless-stopped

  # Frontend React (build de production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
    container_name: geneaia-frontend-prod
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - geneaia-network
    restart: unless-stopped

volumes:
  postgres_prod_data:
    driver: local
  backend_uploads_prod:
    driver: local

networks:
  geneaia-network:
    driver: bridge
