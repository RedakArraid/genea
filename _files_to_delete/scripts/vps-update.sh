#!/bin/bash

# üöÄ Script de Mise √† Jour VPS GeneaIA
# √Ä ex√©cuter sur le VPS apr√®s un git pull

set -e

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
PURPLE='\033[0;35m'
NC='\033[0m'

log() { echo -e "${BLUE}[VPS-UPDATE]${NC} $1"; }
success() { echo -e "${GREEN}[OK]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }
step() { echo -e "${PURPLE}[STEP]${NC} $1"; }

# Banner
echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                üöÄ GENEAIA VPS UPDATE SCRIPT üöÄ               ‚ïë"
echo "‚ïë              Mise √† jour automatique sur VPS                ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# V√©rifier qu'on est dans le bon dossier
if [ ! -f "package.json" ] || [ ! -d "backend" ] || [ ! -d "frontend" ]; then
    error "Ce script doit √™tre ex√©cut√© depuis la racine du projet geneaIA"
    exit 1
fi

# V√©rifier l'environnement
step "1/7 üîç V√©rification de l'environnement..."

if ! command -v node >/dev/null 2>&1; then
    error "Node.js n'est pas install√©"
    exit 1
fi

if ! command -v npm >/dev/null 2>&1; then
    error "npm n'est pas install√©"  
    exit 1
fi

success "‚úÖ Node.js $(node --version) et npm $(npm --version) disponibles"

# V√©rifier PostgreSQL
if command -v psql >/dev/null 2>&1; then
    success "‚úÖ PostgreSQL CLI disponible"
else
    warn "‚ö†Ô∏è PostgreSQL CLI non trouv√©, v√©rifiez que PostgreSQL est install√©"
fi

# Arr√™ter les services en cours si PM2 est disponible
step "2/7 üõë Arr√™t des services..."

if command -v pm2 >/dev/null 2>&1; then
    log "Arr√™t des processus PM2..."
    pm2 stop geneaia-backend 2>/dev/null || true
    pm2 stop geneaia-frontend 2>/dev/null || true
    success "‚úÖ Services PM2 arr√™t√©s"
else
    warn "‚ö†Ô∏è PM2 non disponible, arr√™t manuel requis"
fi

# Sauvegarde de la configuration actuelle
step "3/7 üíæ Sauvegarde de la configuration..."

BACKUP_DIR="backups/$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

if [ -f "backend/.env" ]; then
    cp backend/.env "$BACKUP_DIR/backend.env.backup"
    success "‚úÖ Configuration backend sauvegard√©e"
fi

if [ -f "frontend/.env" ]; then
    cp frontend/.env "$BACKUP_DIR/frontend.env.backup"
    success "‚úÖ Configuration frontend sauvegard√©e"
fi

# Installation/Mise √† jour des d√©pendances backend
step "4/7 üì¶ Mise √† jour du backend..."

cd backend

log "Installation des d√©pendances backend..."
npm install --production

log "G√©n√©ration du client Prisma..."
npx prisma generate

success "‚úÖ Backend mis √† jour"
cd ..

# Installation/Mise √† jour des d√©pendances frontend  
step "5/7 üé® Mise √† jour du frontend..."

cd frontend

log "Installation des d√©pendances frontend..."
npm install

# V√©rifier si les fichiers de configuration existent
if [ ! -f ".env" ]; then
    warn "‚ö†Ô∏è Fichier .env frontend manquant"
    if [ -f ".env.example" ]; then
        log "Copie du fichier .env.example..."
        cp .env.example .env
        warn "‚ö†Ô∏è Configurez frontend/.env avec vos param√®tres"
    fi
fi

log "Build du frontend pour la production..."
npm run build

success "‚úÖ Frontend buil√©"
cd ..

# Migrations de base de donn√©es
step "6/7 üóÑÔ∏è Mise √† jour de la base de donn√©es..."

cd backend

# V√©rifier la configuration de la base
if [ ! -f ".env" ]; then
    error "Fichier backend/.env manquant"
    error "Copiez backend/.env.example et configurez-le"
    exit 1
fi

# V√©rifier la connexion √† la base
log "V√©rification de la connexion √† la base de donn√©es..."
if npx prisma db push --accept-data-loss 2>/dev/null; then
    success "‚úÖ Connexion √† la base de donn√©es OK"
else
    warn "‚ö†Ô∏è Probl√®me de connexion √† la base, tentative avec migrate deploy..."
fi

log "Application des migrations..."
npx prisma migrate deploy || {
    warn "‚ö†Ô∏è √âchec des migrations, tentative de reset..."
    read -p "Voulez-vous r√©initialiser la base de donn√©es ? (y/N): " reset_db
    if [[ "$reset_db" =~ ^[Yy]$ ]]; then
        npx prisma migrate reset --force
        npx prisma db seed
        success "‚úÖ Base de donn√©es r√©initialis√©e"
    else
        error "‚ùå Migrations √©chou√©es, intervention manuelle requise"
        exit 1
    fi
}

success "‚úÖ Base de donn√©es mise √† jour"
cd ..

# Red√©marrage des services
step "7/7 üöÄ Red√©marrage des services..."

if command -v pm2 >/dev/null 2>&1; then
    log "Red√©marrage avec PM2..."
    
    # D√©marrer le backend
    pm2 start backend/src/index.js --name "geneaia-backend" --watch false
    
    # Servir le frontend statique
    pm2 serve frontend/dist 8080 --name "geneaia-frontend"
    
    # Sauvegarder la configuration PM2
    pm2 save
    
    log "V√©rification du statut des services..."
    pm2 status
    
    success "‚úÖ Services red√©marr√©s avec PM2"
    
else
    warn "‚ö†Ô∏è PM2 non disponible"
    log "üí° Pour d√©marrer manuellement :"
    echo "   cd backend && npm start &"
    echo "   # Servir frontend/dist avec votre serveur web (nginx, apache, etc.)"
fi

# Test de sant√©
log "üîç Test de sant√© de l'application..."

sleep 3

# Tester le backend
if curl -f http://localhost:3001/health >/dev/null 2>&1; then
    success "‚úÖ Backend r√©pond sur le port 3001"
else
    warn "‚ö†Ô∏è Backend ne r√©pond pas, v√©rifiez les logs"
    if command -v pm2 >/dev/null 2>&1; then
        echo "   pm2 logs geneaia-backend"
    fi
fi

# Nettoyer les anciennes sauvegardes (garder les 5 derni√®res)
log "üßπ Nettoyage des anciennes sauvegardes..."
if [ -d "backups" ]; then
    cd backups
    ls -t | tail -n +6 | xargs -r rm -rf
    cd ..
    success "‚úÖ Nettoyage termin√©"
fi

# R√©sum√© final
echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë                    ‚úÖ MISE √Ä JOUR TERMIN√âE !                  ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

success "üéâ GeneaIA mis √† jour avec succ√®s !"
echo ""

log "üìä Statut des services :"
if command -v pm2 >/dev/null 2>&1; then
    pm2 status 2>/dev/null || echo "   Aucun processus PM2 en cours"
else
    echo "   PM2 non disponible - services √† v√©rifier manuellement"
fi

echo ""
log "üåê Points d'acc√®s :"
echo "   Backend API : http://localhost:3001"
echo "   Health check: http://localhost:3001/health"
if command -v pm2 >/dev/null 2>&1; then
    echo "   Frontend    : http://localhost:8080 (si PM2 serve actif)"
fi

echo ""
log "üìã Commandes utiles :"
echo "   pm2 logs geneaia-backend  # Voir les logs backend"
echo "   pm2 logs geneaia-frontend # Voir les logs frontend"
echo "   pm2 restart all          # Red√©marrer tous les services"
echo "   pm2 monit                # Monitoring en temps r√©el"

echo ""
warn "‚ö†Ô∏è N'oubliez pas de :"
echo "   - Configurer Nginx si n√©cessaire"
echo "   - V√©rifier les certificats SSL"
echo "   - Tester l'application compl√®tement"

echo ""
success "üéØ Mise √† jour VPS termin√©e avec succ√®s !"